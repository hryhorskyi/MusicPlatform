stages:
  - lintering
  - test
  - deploy
  - notify

image: "ruby:3.1.0"

.base:
  before_script:
    - gem install bundler -v 2.3.9 --no-document
    - ruby -v
    - bundle install -j $(nproc)

.base_db:
  extends: .base
  services:
    - redis:latest
    - postgres:latest
  variables:
    POSTGRES_DB: $POSTGRES_DB
    POSTGRES_USER: $POSTGRES_USER
    POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  before_script:
    - gem install bundler -v 2.3.9 --no-document
    - bundle install
    - RAILS_ENV=test bundle install
    - cp config/database.yml.gitlab config/database.yml
    - RAILS_ENV=test bundle exec rake db:migrate

.base_deploy:
  cache:
    key: swagger_hash
    untracked: true
  before_script:
    - gem install dpl
    - gem install faraday -v 1.10.0
    - apt-get update
    - curl -sL https://sentry.io/get-cli/ | bash
    - export RELEASE_VERSION=$(git rev-parse --short=5 HEAD)

lintering:rubocop:
  extends: .base
  stage: lintering
  script:
    - CI=true RAILS_MASTER_KEY=$DEV_RAILS_MASTER_KEY bundle exec lefthook run pre-commit
    - CI=true RAILS_MASTER_KEY=$DEV_RAILS_MASTER_KEY bundle exec lefthook run pre-push 

test:rspec:
  extends: .base_db
  stage: test
  coverage: '/LOC\s\(\d+\.\d+%\)\scovered/'
  variables:
    COVERAGE: "true"
  script:
    - RAILS_ENV=test bundle exec rspec
    - SIMPLECOV_DISABLE=true RAILS_ENV=test bundle exec rails rswag
  cache:
    key: swagger_hash
    untracked: true
    paths:
      - swagger/*
  artifacts:
    paths:
      - "coverage/"
    name: "Pipeline $CI_PIPELINE_ID Coverage Report"

deploy:staging_heroku:
  extends: .base_deploy
  stage: deploy
  variables:
    SENTRY_ENV: staging
  script:
    - dpl --provider=heroku --app=$HEROKU_STAGING_APP_NAME --api_key=$HEROKU_API_KEY --skip_cleanup
    - sentry-cli releases --org $PROJECT_NAME -p $PROJECT_NAME new $RELEASE_VERSION
    - sentry-cli releases --org $PROJECT_NAME -p $PROJECT_NAME deploys $RELEASE_VERSION new -e $SENTRY_ENV
    - sh .ci-notify.sh ✅
  environment:
    name: staging
    url: https://epam-music-staging.herokuapp.com/
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_BUILD_REF_NAME == "dev"'

deploy:production_heroku:
  extends: .base_deploy
  stage: deploy
  variables:
    SENTRY_ENV: production
  script:
    - dpl --provider=heroku --app=$HEROKU_PRODUCTION_APP_NAME --api_key=$HEROKU_API_KEY --skip_cleanup
    - sentry-cli releases --org $PROJECT_NAME -p $PROJECT_NAME new $RELEASE_VERSION
    - sentry-cli releases --org $PROJECT_NAME -p $PROJECT_NAME deploys $RELEASE_VERSION new -e $SENTRY_ENV
    - sh .ci-notify.sh ✅
  environment:
    name: production
    url: https://epam-music.herokuapp.com/
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_BUILD_REF_NAME == "main"'
notify_error:
  stage: notify
  script:
    - sh .ci-notify.sh ❌
  when: on_failure #deploy fail
